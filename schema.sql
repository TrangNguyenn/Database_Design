--payment
CREATE TABLE PAYMENT
(
	CARD_NUMBER 		VARCHAR2(19),
	CARD_NAME 		VARCHAR2(50) NOT NULL,
	EXPIRE_DATE 		DATE NOT NULL,
	CVV 			CHAR(3) NOT NULL,
	PRIMARY KEY (CARD_NUMBER)
);
-- account
CREATE TABLE ACCOUNT
(
	ACCOUNT_ID 		NUMBER(12,0) NOT NULL, 
	NAME 			VARCHAR(50) NOT NULL,
	GENDER 			VARCHAR2(20),
	BIRTH_DATE 		DATE,
	EMAIL 			VARCHAR2(50) NOT NULL,
	CARD_NUMBER 		VARCHAR2(19) REFERENCES PAYMENT(CARD_NUMBER) ON DELETE CASCADE,--fk
	REGISTERED_DATE 	DATE NOT NULL,
	PRIMARY KEY(ACCOUNT_ID)	
);
--guest
CREATE TABLE GUEST
(
	ACCOUNT_ID          	NUMBER(12,0) NOT NULL REFERENCES ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE, --fk
	BOOKING_NUMBER      	INTEGER,
	LATEST_BOOKING_DATE 	DATE,
	REVIEW_NUMBER 		INTEGER,
	PRIMARY KEY (ACCOUNT_ID)
);

--host
CREATE TABLE HOST
(
	ACCOUNT_ID    		NUMBER(12,0) REFERENCES ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE  NOT NULL,
	LISTING_NUM   		INTEGER,
	OVERALL_RATING 		NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	RESPONSE_RATE  		NUMBER(3,2) DEFAULT 0.00 NOT NULL,
	COMPLETED_STAYS 	INTEGER DEFAULT 0 NOT NULL,
	COMPLETED_RESERVATIONS 	INTEGER DEFAULT 0 NOT NULL,
	CANCELLATION_RATE 	NUMBER(3,2) DEFAULT 0.00 NOT NULL,
	SUPERHOST 		NUMBER(1),
	PRIMARY KEY (ACCOUNT_ID)
);
--superhost
CREATE TABLE SUPERHOST
(
	HOST_ID    		NUMBER(12,0) REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE ,--fk,pk
	START_DATE 		DATE NOT NULL,
	END_DATE   		DATE NOT NULL,
	PRIMARY KEY (HOST_ID) 
);
--guest_review
CREATE TABLE GUEST_REVIEW
(
	REVIEW_ID   		NUMBER(12,0) NOT NULL,
	GUEST_ID    		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk1
	HOST_ID     		NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk2
	REVIEW_DATE 		DATE,
	REVIEW      		CHAR(255) NOT NULL,
	PRIMARY KEY (REVIEW_ID)
);
--location
CREATE TABLE LOCATION
(
	ZIP     		VARCHAR(10) PRIMARY KEY,
	CITY			VARCHAR(10),
	STATE			VARCHAR(15) DEFAULT NULL,
	COUNTRY 		VARCHAR(60) NOT NULL
);
--listing
CREATE TABLE LISTING
(
	LISTING_ID  		NUMBER(12,0) NOT NULL,
	HOST_ID             	NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk1
	NAME                	VARCHAR2(50) NOT NULL,
	DESCRIPTION         	VARCHAR2(20) NOT NULL,
	PROPERTY_TYPE       	CHAR(30) NOT NULL,
	SPACE_KIND          	CHAR(15) NOT NULL,
	GUEST_NUM           	INTEGER NOT NULL,
	BED_NUM             	INTEGER NOT NULL,
	BEDROOM_NUM         	INTEGER NOT NULL,
	BATHROOM_NUM        	INTEGER NOT NULL,
	ADDRESS	     	    	VARCHAR2(255),
	APARTMENT_NUM       	VARCHAR2(20),
	ZIP                 	VARCHAR(10) NOT NULL REFERENCES LOCATION(ZIP) ON DELETE CASCADE,--fk2
	REVIEW_NUM          	INTEGER DEFAULT'0' NULL,
	LATEST_REVIEW_DATE  	DATE,
	OVERALL_CLEANLINESS 	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	OVERALL_COMMU       	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	OVERALL_CHECKIN     	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	OVERALL_VALUE       	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	OVERALL_ACCURACY    	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	OVERALL_LOCATION    	NUMBER(2,1) DEFAULT 0.0 NOT NULL,
	PRIMARY KEY (LISTING_ID),
	CHECK (GUEST_NUM > 0),
	CHECK (BED_NUM > 0),
	CHECK (BEDROOM_NUM > 0)
);

--guest_requirements
CREATE TABLE GUEST_REQUIREMENTS
(
	LISTING_ID 		NUMBER(8,0) REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	CONFIRMED_EMAIL  	NUMBER(1) NOT NULL, --1=TRUE,0=FALSE
	PAYMENT_INFO	 	NUMBER(1) NOT NULL,
	AGREE_RULES	 	NUMBER(1) NOT NULL,
	TRIP_PURPOSE	 	NUMBER(1) NOT NULL,
	GOVERNMENT_ID	 	NUMBER(1) NOT NULL,
	HOST_RECOMMENDED 	NUMBER(1) NOT NULL,
	PRIMARY KEY (LISTING_ID) 
);
--safety_items
CREATE TABLE SAFETY_ITEMS
(
	LISTING_ID 		NUMBER(8,0) REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	LOCK_BEDROOM_DOOR	NUMBER(1) NOT NULL,
	SMOKE_ALARM		NUMBER(1) NOT NULL,
	CO_ALARM		NUMBER(1) NOT NULL,
	FIRST_AID		NUMBER(1) NOT NULL,
	FIRE_EXTINGUISHER	NUMBER(1) NOT NULL,
	PRIVATE_ENTRACE		NUMBER(1) NOT NULL,
	PRIVATE_LIVING_ROOM	NUMBER(1) NOT NULL,
	PRIMARY KEY (LISTING_ID) 
);
--house_rules
CREATE TABLE HOUSE_RULES
(
	LISTING_ID 		NUMBER(8,0) REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	CHILDREN_SUITABLE	NUMBER(1) NOT NULL,
	INFANTS_SUITABLE	NUMBER(1) NOT NULL,
	PETS_SUITABLE		NUMBER(1) NOT NULL,
	SMOKING_ALLOWED		NUMBER(1) NOT NULL,
	EVENTS_ALLOWED		NUMBER(1) NOT NULL,
	ADDITIONAL_RULES	VARCHAR(100),
	PRIMARY KEY (LISTING_ID) 
);
--booking_settings
CREATE TABLE BOOKING_SETTING
(
	LISTING_ID 		NUMBER(8,0) REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	FREQUENCY		VARCHAR2(20) NOT NULL,
	ADVANCE_NOTICE		VARCHAR2(20) NOT NULL,
	AVAILABLE_WINDOW	VARCHAR2(30) NOT NULL,
	ARRIVE_AFTER		DATE,
	ARRIVE_BEFORE		DATE,
	LEAVE_BEFORE		DATE NOT NULL,
	MIN_STAY		INTEGER CHECK(MIN_STAY > 0),
	MAX_STAY		INTEGER CHECK(MAX_STAY > 0),
	PRIMARY KEY (LISTING_ID) 	
);
--availability
CREATE TABLE AVAILABILITY
(
	LISTING_ID 		NUMBER(8,0) NOT NULL REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	DATE_AVAILABLE		DATE NOT NULL,
	AVAILABLE 		NUMBER(1) NOT NULL,
	PRICE			NUMBER(8,2),
	CONSTRAINT PK_LISTING_DATE PRIMARY KEY (LISTING_ID, DATE_AVAILABLE)
);
--pricing
CREATE TABLE PRICING
(
	LISTING_ID 		NUMBER(8,0) REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk,pk
	MIN_PRICE		NUMBER(8,2) NOT NULL,
	MAX_PRICE		NUMBER(8,2) NOT NULL,
	BASE_PRICE		NUMBER(8,2) NOT NULL,
	CURRENCY		CHAR(3) NOT NULL,
	WEEKLY_DISCOUNT		VARCHAR2(40) NOT NULL,
	MONTHLY_DISCOUNT	NUMBER(3,2),
	PRIMARY KEY (LISTING_ID)
);
--amentities
CREATE TABLE AMENTITIES
(
	LISTING_ID 		NUMBER(8,0) NOT NULL REFERENCES LISTING(LISTING_ID)	ON DELETE CASCADE, --fk,pk
	ESSENTIALS		NUMBER(1) NOT NULL,
	WIFI			NUMBER(1) NOT NULL,
	KITCHEN			NUMBER(1) NOT NULL,
	FREE_PARKING		NUMBER(1) NOT NULL,
	TV			NUMBER(1) NOT NULL,
	HOT_WATER		NUMBER(1) NOT NULL,
	HEATING			NUMBER(1) NOT NULL,
	AIR_CONDITIONING	NUMBER(1) NOT NULL,
	WASHER			NUMBER(1) NOT NULL,
	DRYER			NUMBER(1) NOT NULL,
	IRON			NUMBER(1) NOT NULL,
	SHAMPOO			NUMBER(1) NOT NULL,
	HAIR_DRYER		NUMBER(1) NOT NULL,
	HOT_TUB			NUMBER(1) NOT NULL,
	POOL			NUMBER(1) NOT NULL,
	BREAKFAST		NUMBER(1) NOT NULL,
	GYM			NUMBER(1) NOT NULL,
	WORKSPACE		NUMBER(1) NOT NULL,
	ELEVATOR		NUMBER(1) NOT NULL,
	INDOOR_FIREPLACE	NUMBER(1) NOT NULL,
	HANGERS			NUMBER(1) NOT NULL,
	PRIMARY KEY (LISTING_ID)
);
--listing_review
CREATE TABLE LISTING_REVIEW
(
	REVIEW_ID		NUMBER(12,0) PRIMARY KEY,
	LISTING_ID		NUMBER(12,0) NOT NULL REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk1
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk2
	REVIEW_DATE		DATE,
	CLEANLINESS_SCORE	NUMBER(2,1) CHECK(1<= CLEANLINESS_SCORE AND CLEANLINESS_SCORE <= 5) NOT NULL,
	COMMU_SCORE		NUMBER(2,1) CHECK(1<= COMMU_SCORE AND COMMU_SCORE <= 5) NOT NULL,
	CHECKIN_SCORE		NUMBER(2,1) CHECK(1<= CHECKIN_SCORE AND CHECKIN_SCORE <= 5) NOT NULL,
	VALUE_SCORE		NUMBER(2,1) CHECK(1<= VALUE_SCORE AND VALUE_SCORE <= 5) NOT NULL,
	ACCURACY_SCORE		NUMBER(2,1) CHECK(1<= ACCURACY_SCORE AND ACCURACY_SCORE <= 5) NOT NULL,
	LOCATION_SCORE		NUMBER(2,1) CHECK(1<= LOCATION_SCORE AND LOCATION_SCORE <= 5) NOT NULL,
	REVIEW			VARCHAR2(200)
);
--listing_cohost
CREATE TABLE LISTING_COHOST
(
	LISTING_ID		NUMBER(12,0) NOT NULL REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE, --fk1,pk
	HOST_ID			NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk2,pk
	CONSTRAINT PK_COHOST PRIMARY KEY(HOST_ID, LISTING_ID)
);
--listing_booking
CREATE TABLE LISTING_BOOKING
(
	BOOKING_ID		NUMBER(12,0) PRIMARY KEY,
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE,--fk
	LISTING_ID		NUMBER(12,0) NOT NULL REFERENCES LISTING(LISTING_ID) ON DELETE CASCADE,--fk
	GUEST_NUM		INTEGER CHECK(GUEST_NUM > 0) NOT NULL,
	BOOKING_STATUS		VARCHAR2(100) NOT NULL,
	CHECKIN_DATE		DATE NOT NULL,
	CHECKOUT_DATE		DATE NOT NULL,
	TRIP_PRICE		NUMBER(8,2) NOT NULL,
	SERVICE_FEE		NUMBER(8,2),
	CLEANING_FEE		NUMBER(8,2),
	TOTAL_PRICE		NUMBER(8,2) NOT NULL
);


--adventure
CREATE TABLE ADVENTURE
(
	ADVENTURE_ID		NUMBER(12,0) PRIMARY KEY, 
	HOST_ID			NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk1
	NAME			VARCHAR2(50) NOT NULL,
	CITY			VARCHAR(30) NOT NULL,----------------------------------------------
	COUNTRY			VARCHAR2(30) NOT NULL,
	PRICE			NUMBER(8,2) NOT NULL,
	DURATION		VARCHAR2(8) NOT NULL,
	SUMMARY			VARCHAR2(500)
);
--adventure_booking
CREATE TABLE ADVENTURE_BOOKING
(
	BOOKING_ID		NUMBER(12,0) PRIMARY KEY,
	BOOKING_DATE		DATE NOT NULL,
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk2
	ADVENTURE_ID		NUMBER(12,0) NOT NULL REFERENCES ADVENTURE(ADVENTURE_ID) ON DELETE CASCADE, --fk3
	GUEST_NUM		INTEGER CHECK(GUEST_NUM >0) NOT NULL,
	TOTAL_PRICE		INTEGER NOT NULL
);
--adventure_review
CREATE TABLE ADVENTURE_REVIEW
(
	REVIEW_ID		NUMBER(12,0) PRIMARY KEY,
	ADVENTURE_ID		NUMBER(12,0) NOT NULL REFERENCES ADVENTURE(ADVENTURE_ID) ON DELETE CASCADE, --fk1
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk2
	REVIEW_DATE		DATE,
	REVIEW_SCORE		NUMBER(2,1) CHECK(REVIEW_SCORE > 0 AND REVIEW_SCORE <= 5),
	REVIEW			VARCHAR2(255)
);
--adventure_cohost
CREATE TABLE ADVENTURE_COHOST
(
	HOST_ID			NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk1,pk
	ADVENTURE_ID		NUMBER(12,0) NOT NULL REFERENCES ADVENTURE(ADVENTURE_ID) ON DELETE CASCADE, --fk2,pk
	CONSTRAINT PK_COHOST_AD PRIMARY KEY(HOST_ID, ADVENTURE_ID)
);
--experience
CREATE TABLE EXPERIENCE
(
	EXP_ID			NUMBER(12,0) PRIMARY KEY,
	HOST_ID			NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk
	NAME			VARCHAR2(60) NOT NULL,
	THEME			VARCHAR2(40) NOT NULL,
	LANGUAGE		VARCHAR2(10) NOT NULL,------------------------------------------------------5
	DURATION		VARCHAR2(30) NOT NULL,
	ADDRESS			VARCHAR(30),	
	ZIP			VARCHAR(10) REFERENCES LOCATION(ZIP) ON DELETE CASCADE, --fk2
	PRICE_PER_GUEST		NUMBER(10,2) NOT NULL,
	PRIVATE_PRICE		NUMBER(10,2),----------------------------------------------------------------5
	EXP_TYPE		VARCHAR2(15) NOT NULL,
	MIN_AGE			INTEGER CHECK(MIN_AGE > 1) NOT NULL,
	ACTIVITY_LEVEL		VARCHAR2(10) NOT NULL,
	SKILL_LEVEL		VARCHAR2(15) NOT NULL,
	VERIFIED_ID		NUMBER(1,0) NOT NULL,-----------------------------------------5
	PUBLIC_GUEST_NUM	NUMBER(10,2) CHECK(PUBLIC_GUEST_NUM < 11 AND PUBLIC_GUEST_NUM > 0),
	PRIVATE_GUEST_NUM	NUMBER(10,2) CHECK(PRIVATE_GUEST_NUM < 31 AND PRIVATE_GUEST_NUM > 0),
	START_TIME		DATE NOT NULL,
	REVIEW_NUM		INTEGER,
	OVERALL_SCORE		NUMBER(2,1),--------------------------------------------------------5
	CUTOFF_ADDITIONAL	VARCHAR2(30) NOT NULL,
	CUTOFF_FIRST		VARCHAR2(30) NOT NULL
);
--experience_review
CREATE TABLE EXPERIENCE_REVIEW
(
	REVIEW_ID		NUMBER(12,0) PRIMARY KEY,
	EXP_ID			NUMBER(12,0) NOT NULL REFERENCES EXPERIENCE(EXP_ID) ON DELETE CASCADE, --fk1
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk2
	REVIEW_DATE		DATE,
	REVIEW_SCORE		INTEGER CHECK(REVIEW_SCORE > 0 AND REVIEW_SCORE <= 5),
	REVIEW			VARCHAR2(255)
);
--experience_booking
CREATE TABLE EXPERIENCE_BOOKING
(
	BOOKING_ID		NUMBER(12,0) PRIMARY KEY,
	GUEST_ID		NUMBER(12,0) NOT NULL REFERENCES GUEST(ACCOUNT_ID) ON DELETE CASCADE, --fk
	EXP_ID			NUMBER(12,0) NOT NULL REFERENCES EXPERIENCE(EXP_ID) ON DELETE CASCADE, --fk2
	BOOKING_DATE		DATE,
	GUEST_NUM		INTEGER CHECK(GUEST_NUM > 0) NOT NULL,
	TOTAL_PRICE		NUMBER(10,2) NOT NULL
);

--experience_cohost
CREATE TABLE EXPERIENCE_COHOST
(
	EXP_ID			NUMBER(12,0) NOT NULL REFERENCES EXPERIENCE(EXP_ID) ON DELETE CASCADE, --fk2,pk
	HOST_ID			NUMBER(12,0) NOT NULL REFERENCES HOST(ACCOUNT_ID) ON DELETE CASCADE, --fk1,pk
	CONSTRAINT PK_COHOST_EXP PRIMARY KEY(HOST_ID, EXP_ID)
);